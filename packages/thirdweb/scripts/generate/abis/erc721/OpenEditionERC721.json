[
  "constructor()",
  "error ApprovalCallerNotOwnerNorApproved()",
  "error ApprovalQueryForNonexistentToken()",
  "error BalanceQueryForZeroAddress()",
  "error InvalidQueryRange()",
  "error MintERC2309QuantityExceedsLimit()",
  "error MintToZeroAddress()",
  "error MintZeroQuantity()",
  "error OwnerQueryForNonexistentToken()",
  "error OwnershipNotInitializedForExtraData()",
  "error TransferCallerNotOwnerNorApproved()",
  "error TransferFromIncorrectOwner()",
  "error TransferToNonERC721ReceiverImplementer()",
  "error TransferToZeroAddress()",
  "error URIQueryForNonexistentToken()",
  "event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)",
  "event ApprovalForAll(address indexed owner, address indexed operator, bool approved)",
  "event BatchMetadataUpdate(uint256 _fromTokenId, uint256 _toTokenId)",
  "event ClaimConditionsUpdated((uint256 startTimestamp, uint256 maxClaimableSupply, uint256 supplyClaimed, uint256 quantityLimitPerWallet, bytes32 merkleRoot, uint256 pricePerToken, address currency, string metadata)[] claimConditions, bool resetEligibility)",
  "event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to)",
  "event ContractURIUpdated(string prevURI, string newURI)",
  "event DefaultRoyalty(address indexed newRoyaltyRecipient, uint256 newRoyaltyBps)",
  "event Initialized(uint8 version)",
  "event MetadataUpdate(uint256 _tokenId)",
  "event OwnerUpdated(address indexed prevOwner, address indexed newOwner)",
  "event PrimarySaleRecipientUpdated(address indexed recipient)",
  "event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole)",
  "event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender)",
  "event RoyaltyForToken(uint256 indexed tokenId, address indexed royaltyRecipient, uint256 royaltyBps)",
  "event SharedMetadataUpdated(string name, string description, string imageURI, string animationURI)",
  "event TokensClaimed(uint256 indexed claimConditionIndex, address indexed claimer, address indexed receiver, uint256 startTokenId, uint256 quantityClaimed)",
  "event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)",
  "function DEFAULT_ADMIN_ROLE() view returns (bytes32)",
  "function approve(address to, uint256 tokenId) payable",
  "function balanceOf(address owner) view returns (uint256)",
  "function burn(uint256 tokenId)",
  "function claim(address _receiver, uint256 _quantity, address _currency, uint256 _pricePerToken, (bytes32[] proof, uint256 quantityLimitPerWallet, uint256 pricePerToken, address currency) _allowlistProof, bytes _data) payable",
  "function claimCondition() view returns (uint256 currentStartId, uint256 count)",
  "function contractURI() view returns (string)",
  "function explicitOwnershipOf(uint256 tokenId) view returns ((address addr, uint64 startTimestamp, bool burned, uint24 extraData) ownership)",
  "function getActiveClaimConditionId() view returns (uint256)",
  "function getApproved(uint256 tokenId) view returns (address)",
  "function getClaimConditionById(uint256 _conditionId) view returns ((uint256 startTimestamp, uint256 maxClaimableSupply, uint256 supplyClaimed, uint256 quantityLimitPerWallet, bytes32 merkleRoot, uint256 pricePerToken, address currency, string metadata) condition)",
  "function getDefaultRoyaltyInfo() view returns (address, uint16)",
  "function getRoleAdmin(bytes32 role) view returns (bytes32)",
  "function getRoleMember(bytes32 role, uint256 index) view returns (address member)",
  "function getRoleMemberCount(bytes32 role) view returns (uint256 count)",
  "function getRoyaltyInfoForToken(uint256 _tokenId) view returns (address, uint16)",
  "function getSupplyClaimedByWallet(uint256 _conditionId, address _claimer) view returns (uint256 supplyClaimedByWallet)",
  "function grantRole(bytes32 role, address account)",
  "function hasRole(bytes32 role, address account) view returns (bool)",
  "function hasRoleWithSwitch(bytes32 role, address account) view returns (bool)",
  "function initialize(address _defaultAdmin, string _name, string _symbol, string _contractURI, address[] _trustedForwarders, address _saleRecipient, address _royaltyRecipient, uint128 _royaltyBps)",
  "function isApprovedForAll(address owner, address operator) view returns (bool)",
  "function isTrustedForwarder(address forwarder) view returns (bool)",
  "function multicall(bytes[] data) returns (bytes[] results)",
  "function name() view returns (string)",
  "function nextTokenIdToClaim() view returns (uint256)",
  "function nextTokenIdToMint() view returns (uint256)",
  "function owner() view returns (address)",
  "function ownerOf(uint256 tokenId) view returns (address)",
  "function primarySaleRecipient() view returns (address)",
  "function renounceRole(bytes32 role, address account)",
  "function revokeRole(bytes32 role, address account)",
  "function royaltyInfo(uint256 tokenId, uint256 salePrice) view returns (address receiver, uint256 royaltyAmount)",
  "function safeTransferFrom(address from, address to, uint256 tokenId) payable",
  "function safeTransferFrom(address from, address to, uint256 tokenId, bytes _data) payable",
  "function setApprovalForAll(address operator, bool approved)",
  "function setClaimConditions((uint256 startTimestamp, uint256 maxClaimableSupply, uint256 supplyClaimed, uint256 quantityLimitPerWallet, bytes32 merkleRoot, uint256 pricePerToken, address currency, string metadata)[] _conditions, bool _resetClaimEligibility)",
  "function setContractURI(string _uri)",
  "function setDefaultRoyaltyInfo(address _royaltyRecipient, uint256 _royaltyBps)",
  "function setOwner(address _newOwner)",
  "function setPrimarySaleRecipient(address _saleRecipient)",
  "function setRoyaltyInfoForToken(uint256 _tokenId, address _recipient, uint256 _bps)",
  "function setSharedMetadata((string name, string description, string imageURI, string animationURI) _metadata)",
  "function sharedMetadata() view returns (string name, string description, string imageURI, string animationURI)",
  "function startTokenId() pure returns (uint256)",
  "function supportsInterface(bytes4 interfaceId) view returns (bool)",
  "function symbol() view returns (string)",
  "function tokenURI(uint256 _tokenId) view returns (string)",
  "function tokensOfOwner(address owner) view returns (uint256[])",
  "function tokensOfOwnerIn(address owner, uint256 start, uint256 stop) view returns (uint256[])",
  "function totalMinted() view returns (uint256)",
  "function totalSupply() view returns (uint256)",
  "function transferFrom(address from, address to, uint256 tokenId) payable",
  "function verifyClaim(uint256 _conditionId, address _claimer, uint256 _quantity, address _currency, uint256 _pricePerToken, (bytes32[] proof, uint256 quantityLimitPerWallet, uint256 pricePerToken, address currency) _allowlistProof) view returns (bool isOverride)"
]
